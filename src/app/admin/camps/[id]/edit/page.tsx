'use client';

import React, { useState, useEffect } from 'react';
import { useRouter, useParams } from 'next/navigation';
import { CampForm } from '@/components/CampForm';
import { getCampById, updateCamp } from '@/lib/campService';
import { Camp, UpdateCampData } from '@/types/camp';
import { toast } from 'sonner';
import { AdminOnly } from '@/components/RoleProtected';
import { Button } from '@/components/ui/button';
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';
import { Loader2, ArrowLeft } from 'lucide-react';
import Link from 'next/link';

export default function EditCampPage() {
  const router = useRouter();
  const params = useParams();
  const campId = params.id as string;
  
  const [camp, setCamp] = useState<Camp | null>(null);
  const [loading, setLoading] = useState(true);
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [notFound, setNotFound] = useState(false);

  useEffect(() => {
    const loadCamp = async () => {
      try {
        setLoading(true);
        console.log('üîç –ó–∞–≥—Ä—É–∂–∞–µ–º –∫—ç–º–ø –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', campId);
        
        const campData = await getCampById(campId);
        if (!campData) {
          console.log('‚ùå –ö—ç–º–ø –Ω–µ –Ω–∞–π–¥–µ–Ω');
          setNotFound(true);
          return;
        }
        
        setCamp(campData);
        console.log('‚úÖ –ö—ç–º–ø –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', campData);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç–º–ø–∞:', error);
        toast.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫—ç–º–ø');
        setNotFound(true);
      } finally {
        setLoading(false);
      }
    };

    if (campId) {
      loadCamp();
    }
  }, [campId]);

  const handleSubmit = async (campData: UpdateCampData) => {
    if (!camp) return;
    
    setIsSubmitting(true);
    try {
      console.log('‚úèÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º –∫—ç–º–ø:', campData);
      
      await updateCamp(camp.id, campData);
      console.log('‚úÖ –ö—ç–º–ø —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
      
      toast.success('–ö—ç–º–ø —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!');
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫—ç–º–ø–∞
      router.push(`/camps/${camp.id}`);
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç–º–ø–∞:', error);
      toast.error(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∫—ç–º–ø');
    } finally {
      setIsSubmitting(false);
    }
  };

  const handleCancel = () => {
    router.back();
  };

  if (loading) {
    return (
      <AdminOnly fallback={
        <div className="container mx-auto px-4 py-8 text-center">
          <h1 className="text-2xl font-bold text-destructive">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
          <p className="text-muted-foreground mt-2">
            –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—ç–º–ø—ã.
          </p>
        </div>
      }>
        <div className="container mx-auto px-4 py-8">
          <Card>
            <CardContent className="flex items-center justify-center py-12">
              <Loader2 className="h-8 w-8 animate-spin mr-2" />
              <span>–ó–∞–≥—Ä—É–∑–∫–∞ –∫—ç–º–ø–∞...</span>
            </CardContent>
          </Card>
        </div>
      </AdminOnly>
    );
  }

  if (notFound) {
    return (
      <AdminOnly fallback={
        <div className="container mx-auto px-4 py-8 text-center">
          <h1 className="text-2xl font-bold text-destructive">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
          <p className="text-muted-foreground mt-2">
            –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—ç–º–ø—ã.
          </p>
        </div>
      }>
        <div className="container mx-auto px-4 py-8">
          <Card>
            <CardContent className="text-center py-12">
              <h1 className="text-2xl font-bold text-destructive mb-4">–ö—ç–º–ø –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
              <p className="text-muted-foreground mb-6">
                –ö—ç–º–ø —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º ID –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.
              </p>
              <div className="flex gap-4 justify-center">
                <Link href="/admin/camps">
                  <Button variant="outline">
                    <ArrowLeft className="h-4 w-4 mr-2" />
                    –ö —Å–ø–∏—Å–∫—É –∫—ç–º–ø–æ–≤
                  </Button>
                </Link>
                <Link href="/admin">
                  <Button>
                    –ö –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
                  </Button>
                </Link>
              </div>
            </CardContent>
          </Card>
        </div>
      </AdminOnly>
    );
  }

  return (
    <AdminOnly fallback={
      <div className="container mx-auto px-4 py-8 text-center">
        <h1 className="text-2xl font-bold text-destructive">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
        <p className="text-muted-foreground mt-2">
          –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫—ç–º–ø—ã.
        </p>
      </div>
    }>
      <div className="container mx-auto px-4 py-8">
        <div className="flex items-center gap-4 mb-6">
          <Link href="/admin/camps">
            <Button variant="outline" size="sm">
              <ArrowLeft className="h-4 w-4 mr-2" />
              –ù–∞–∑–∞–¥
            </Button>
          </Link>
          <div>
            <h1 className="text-3xl font-bold">–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç–º–ø–∞</h1>
            <p className="text-muted-foreground mt-2">
              –û–±–Ω–æ–≤–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—ç–º–ø–µ "{camp?.title}"
            </p>
          </div>
        </div>
        
        <CampForm
          initialData={camp}
          onSubmit={handleSubmit}
          onCancel={handleCancel}
          isLoading={isSubmitting}
          isEditing={true}
        />
      </div>
    </AdminOnly>
  );
} 