'use client';

import React, { useState } from 'react';
import { useRouter } from 'next/navigation';
import { CampForm } from '@/components/CampForm';
import { createCamp } from '@/lib/campService';
import { CreateCampData } from '@/types/camp';
import { toast } from 'sonner';
import { AdminOnly } from '@/components/RoleProtected';

export default function CreateCampPage() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);

  const handleSubmit = async (campData: CreateCampData) => {
    setIsLoading(true);
    try {
      console.log('üéØ –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫—ç–º–ø:', campData);
      
      const newCamp = await createCamp(campData);
      console.log('‚úÖ –ö—ç–º–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω:', newCamp);
      
      toast.success('–ö—ç–º–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!');
      
      // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ –∫—ç–º–ø–∞
      router.push(`/camps/${newCamp.id}`);
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—ç–º–ø–∞:', error);
      toast.error(error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫—ç–º–ø');
    } finally {
      setIsLoading(false);
    }
  };

  const handleCancel = () => {
    router.back();
  };

  return (
    <AdminOnly fallback={
      <div className="container mx-auto px-4 py-8 text-center">
        <h1 className="text-2xl font-bold text-destructive">–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h1>
        <p className="text-muted-foreground mt-2">
          –¢–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –º–æ–≥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫—ç–º–ø—ã.
        </p>
      </div>
    }>
      <div className="container mx-auto px-4 py-8">
        <div className="mb-6">
          <h1 className="text-3xl font-bold">–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –∫—ç–º–ø–∞</h1>
          <p className="text-muted-foreground mt-2">
            –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫—ç–º–ø–∞. –í—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω—ã.
          </p>
        </div>
        
        <CampForm
          onSubmit={handleSubmit}
          onCancel={handleCancel}
          isLoading={isLoading}
        />
      </div>
    </AdminOnly>
  );
} 